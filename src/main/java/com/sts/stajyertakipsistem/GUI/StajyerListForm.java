package com.sts.stajyertakipsistem.GUI;

import com.sts.stajyertakipsistem.model.Stajyer;
import com.sts.stajyertakipsistem.service.StajyerService;
import java.awt.Component; // getTableCellRendererComponent için
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableCellRenderer; // Tarih renderer için
import javax.swing.table.TableRowSorter;

public class StajyerListForm extends javax.swing.JFrame {

    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(StajyerListForm.class.getName());

    private StajyerTableModel stajyerTableModel;
    private StajyerService stajyerService;
    private TableRowSorter<StajyerTableModel> sorter;

    /**
     * StajyerListForm'un constructor'ı
     * Bu metodun doğru şekilde tanımlandığından emin olmalıyız.
     */
    public StajyerListForm() {
        // JFrame'in varsayılan kapanma davranışını ayarla
        // Bu satır initComponents() içinde de olabilir, ancak burada olması daha iyi.
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE); // Uygulamayı kapatınca tüm pencereler kapansın
        
        // GUI bileşenlerini başlat (GUI Builder tarafından oluşturulan kısım)
        initComponents();
        
        // Kendi özel bileşen başlatma ve mantık kodlarımızı çağır
        // Bu metodda stajyerTableModel ve stajyerService başlatılıyor olmalı
        initializeCustomComponents(); 
        
        // StajyerService nesnesini burada veya initializeCustomComponents içinde başlatın
        // Genellikle initializeCustomComponents içinde yapmak daha iyidir.
        stajyerService = new StajyerService(); // StajyerService'i burada başlatın

        // Tabloya veriyi yükle
        loadStajyerTableData(); 
        
        // jTextField1'e DocumentListener ekle
        jTextField1.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                filterTable();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                filterTable();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                filterTable(); // Genellikle düz metin alanları için çağrılmaz
            }
        });

        // JFrame'in boyutunu ve konumunu ayarla
        // initComponents() sonunda pack() çağrılmış görünüyor, bu yeterli.
        // setLocationRelativeTo(null) bu constructor'da olmalı
        this.setLocationRelativeTo(null); // Pencereyi ekranın ortasında aç

        // Diğer button action listenerları initComponents() içinde zaten tanımlı
    }
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollBar1 = new javax.swing.JScrollBar();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("STAJYER TAKİP SİSTEMİ");

        jScrollBar1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Ad Soyad", "Adres", "Telefon No", "IBAN No", "Doğum Tarihi", "Okul", "Referans", "T.C. Kimlik No", "Başlangıç Tarihi", "Bitiş Tarihi", "Bölüm", "Sınıf"
            }
        ));
        jTable1.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jTextField1.setText("jTextField1");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton1.setText("Ara");

        jButton2.setText("Çıkış Yap");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Ekle");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Sil");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Yenile");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton4)
                        .addGap(18, 18, 18)
                        .addComponent(jButton5))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1619, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(36, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 859, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 859, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
 private void initializeCustomComponents() {
        // stajyerTableModel'ı boş liste ile başlatma
        stajyerTableModel = new StajyerTableModel(); // Sadece parametresiz constructor'ı çağırıyoruz.

        // JTable'ın modelini set ediyoruz (initComponents'de de olabilir, ama burada olması daha güvenli)
        jTable1.setModel(stajyerTableModel); 

        // Tablo sıralayıcı (TableRowSorter)
        sorter = new TableRowSorter<>(stajyerTableModel); 
        jTable1.setRowSorter(sorter);

        // Tarih formatlama için özel renderer
        DateTimeFormatter displayFormatter = DateTimeFormatter.ofPattern("dd.MM.yyyy");
        jTable1.setDefaultRenderer(LocalDate.class, new DefaultTableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                if (value instanceof LocalDate) {
                    value = ((LocalDate) value).format(displayFormatter);
                }
                return super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
            }
        });
        
        // Veritabanı hizmetini (service) burada başlatmak en uygun yerdir
        stajyerService = new StajyerService(); // <--- Bu satır önemli!

        // Tabloya çift tıklama dinleyicisi ekle (Detay/Düzenle için)
        // Bu kısım zaten var ve doğru görünüyor.
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                if (evt.getClickCount() == 2) { // Çift tıklama algılandı
                    int selectedRow = jTable1.getSelectedRow();
                    if (selectedRow != -1) {
                        int modelRow = jTable1.convertRowIndexToModel(selectedRow);
                        Stajyer selectedStajyer = stajyerTableModel.getStajyerAt(modelRow);
                        if (selectedStajyer != null && selectedStajyer.getStajyerId() != null) {
                            openSpesifikStajyerForm(selectedStajyer.getStajyerId());
                        } else {
                            JOptionPane.showMessageDialog(StajyerListForm.this,
                                    "Seçilen stajyerin detayları yüklenemedi (ID bulunamadı).",
                                    "Hata",
                                    JOptionPane.ERROR_MESSAGE);
                        }
                    }
                }
            }
        });
    }

    private void loadStajyerTableData() {
        try {
            List<Stajyer> stajyerler = stajyerService.getAllStajyerler();
            stajyerTableModel.setStajyerList(stajyerler);
        } catch (Exception e) {
            logger.log(Level.SEVERE, "Stajyer verileri yüklenirken hata.", e);
            JOptionPane.showMessageDialog(this, "Stajyer verileri yüklenirken bir hata oluştu: " + e.getMessage(), "Hata", JOptionPane.ERROR_MESSAGE);
        }
    }

   private void filterTable() {
        String searchText = jTextField1.getText().trim();
        
        // Sorter'ın null kontrolünü kaldırabiliriz çünkü initializeCustomComponents'de başlatıldı.
        // Ancak yine de hata oluşması ihtimaline karşı defensive programlama iyidir.
        if (sorter == null) {
            sorter = new TableRowSorter<>(stajyerTableModel);
            jTable1.setRowSorter(sorter);
        }

        if (searchText.length() == 0) {
            sorter.setRowFilter(null);
        } else {
            // RowFilter.regexFilter() Object.toString() üzerinden çalıştığı için çoğu tipli sütunda işe yarar.
            // Integer veya Long sütunlarında sayısal değil, string olarak arama yapar.
            RowFilter<StajyerTableModel, Object> rowFilter = RowFilter.regexFilter("(?i)" + searchText); // Case-insensitive arama
            sorter.setRowFilter(rowFilter);
        }
    
}
    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
       filterTable();
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
         openSpesifikStajyerForm(null);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
                                   
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow != -1) {
            int confirm = JOptionPane.showConfirmDialog(this, "Seçili stajyeri silmek istediğinizden emin misiniz?", "Silme Onayı", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                int modelRow = jTable1.convertRowIndexToModel(selectedRow);
                Stajyer selectedStajyer = stajyerTableModel.getStajyerAt(modelRow);
                if (selectedStajyer != null && selectedStajyer.getStajyerId() != null) {
                    try {
                        boolean success = stajyerService.deleteStajyer(selectedStajyer.getStajyerId());
                        if (success) {
                            JOptionPane.showMessageDialog(this, "Stajyer başarıyla silindi.", "Başarılı", JOptionPane.INFORMATION_MESSAGE);
                            loadStajyerTableData(); // Tabloyu yenile
                        } else {
                            JOptionPane.showMessageDialog(this, "Stajyer silinirken bir hata oluştu.", "Hata", JOptionPane.ERROR_MESSAGE);
                        }
                    } catch (Exception ex) {
                        logger.log(Level.SEVERE, "Stajyer silme sırasında beklenmeyen hata.", ex);
                        JOptionPane.showMessageDialog(this, "Stajyer silinirken bir hata oluştu: " + ex.getMessage(), "Hata", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Seçilen stajyerin ID'si bulunamadı.", "Hata", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Lütfen silmek istediğiniz stajyeri seçin.", "Uyarı", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
         loadStajyerTableData(); 
    }//GEN-LAST:event_jButton5ActionPerformed

    private void openSpesifikStajyerForm(String stajyerId) {
        JFrame detailFrame = new JFrame(stajyerId == null ? "Yeni Stajyer Ekle" : "Stajyer Detayları");
        detailFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

        // Form kapatıldığında tabloyu yenilemek için callback
        Runnable onSaveCallback = () -> {
            loadStajyerTableData(); // Veri güncellendiğinde tabloyu yenile
            detailFrame.dispose(); // Formu kapat
        };

        SpesifikStajyerForm spesifikForm;
        if (stajyerId == null) {
            // Yeni stajyer ekleme modu
            spesifikForm = new SpesifikStajyerForm(onSaveCallback);
        } else {
            // Mevcut stajyer bilgilerini düzenleme modu (EvrakTuru null)
            spesifikForm = new SpesifikStajyerForm(stajyerId, null, onSaveCallback);
        }

        detailFrame.getContentPane().add(spesifikForm);
        detailFrame.pack();
        detailFrame.setLocationRelativeTo(this); // Ana JFrame'in ortasında aç
        detailFrame.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
